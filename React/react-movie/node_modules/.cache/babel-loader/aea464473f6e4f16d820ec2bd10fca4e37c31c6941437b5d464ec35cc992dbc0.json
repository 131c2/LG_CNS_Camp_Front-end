{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\react-movie\\\\src\\\\components\\\\MovieList.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport styles from './MovieList.module.css';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst movie = () => {\n  _s();\n  const [list, setList] = useState([]);\n  const getDate = async () => {\n    const url = 'https://api.themoviedb.org/3/search/movie?api_key=cba95d401a14ab806ffc13a5052aab89&query=%EB%A0%88%EC%98%B9';\n    const res = await fetch(url);\n    const data = await res.json();\n    setList(data);\n  };\n  useEffect(() => {\n    getDate();\n  }, []);\n};\n_s(movie, \"mo3wxvns+52yWT3GI5PbrxgLw68=\");\nconst MovieList = () => {\n  return list.map(v => {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: v.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 14\n    }, this);\n  });\n};\n_c = MovieList;\nexport default MovieList;\n{/* <div className={styles.movie}>\n      <h1>영화 검색</h1>\n      <div className={styles.search_box}>\n        <input\n          type=\"text\"\n          placeholder=\"영화 제목을 검색하세요\"\n        />\n        <button>\n          검색\n        </button>\n      </div>\n      <ul className={styles.list}>\n        <li>\n          <img src={`https://image.tmdb.org/t/p/w185/qYczuua2tgjfxcdtLNDC0n4mOHz.jpg`}\n          />\n          <h2>서울의 봄</h2>\n          <p>평점: 7.428</p>\n          <p>개봉일: 2023-11-22</p>\n          <p>After the assassination of President Park, martial law has been declared.</p>\n        </li>\n      </ul>\n    </div> */}\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["useState","styles","useEffect","jsxDEV","_jsxDEV","movie","_s","list","setList","getDate","url","res","fetch","data","json","MovieList","map","v","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/react/react-movie/src/components/MovieList.js"],"sourcesContent":["import { useState } from 'react';\nimport styles from './MovieList.module.css';\nimport { useEffect } from 'react';\n\nconst movie = () => {\n  const [list,setList] = useState([]);\n\n  const getDate = async() => {\n    const url = 'https://api.themoviedb.org/3/search/movie?api_key=cba95d401a14ab806ffc13a5052aab89&query=%EB%A0%88%EC%98%B9';\n    const res = await fetch(url);\n    const data = await res.json();\n    setList(data);\n  }\n\n  useEffect (() => {\n    getDate();\n  }, []);\n}\n\nconst MovieList = () => {\n  return (\n    list.map((v) => {\n      return <h3>{v.title}</h3>\n    })\n  );\n};\n\nexport default MovieList;\n\n{/* <div className={styles.movie}>\n      <h1>영화 검색</h1>\n      <div className={styles.search_box}>\n        <input\n          type=\"text\"\n          placeholder=\"영화 제목을 검색하세요\"\n        />\n        <button>\n          검색\n        </button>\n      </div>\n      <ul className={styles.list}>\n        <li>\n          <img src={`https://image.tmdb.org/t/p/w185/qYczuua2tgjfxcdtLNDC0n4mOHz.jpg`}\n          />\n          <h2>서울의 봄</h2>\n          <p>평점: 7.428</p>\n          <p>개봉일: 2023-11-22</p>\n          <p>After the assassination of President Park, martial law has been declared.</p>\n        </li>\n      </ul>\n    </div> */}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEnC,MAAMS,OAAO,GAAG,MAAAA,CAAA,KAAW;IACzB,MAAMC,GAAG,GAAG,6GAA6G;IACzH,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IAC5B,MAAMG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IAC7BN,OAAO,CAACK,IAAI,CAAC;EACf,CAAC;EAEDX,SAAS,CAAE,MAAM;IACfO,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;AACR,CAAC;AAAAH,EAAA,CAbKD,KAAK;AAeX,MAAMU,SAAS,GAAGA,CAAA,KAAM;EACtB,OACER,IAAI,CAACS,GAAG,CAAEC,CAAC,IAAK;IACd,oBAAOb,OAAA;MAAAc,QAAA,EAAKD,CAAC,CAACE;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC3B,CAAC,CAAC;AAEN,CAAC;AAACC,EAAA,GANIT,SAAS;AAQf,eAAeA,SAAS;AAExB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aArBC;AAqBa,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}