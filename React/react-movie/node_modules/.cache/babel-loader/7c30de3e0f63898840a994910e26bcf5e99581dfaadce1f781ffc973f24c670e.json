{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\react-movie\\\\src\\\\components\\\\MovieList.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport styles from './MovieList.module.css';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = () => {\n  _s();\n  const [list, setList] = useState([]);\n  const [sch, setSch] = useState(\"\");\n  const searchText = e => {\n    const search = e.target.value;\n    setSch(search);\n  };\n  const getDate = async () => {\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=cba95d401a14ab806ffc13a5052aab89&query=${sch}`;\n    const res = await fetch(url);\n    const data = await res.json();\n    setList(data.results);\n  };\n  useEffect(() => {\n    getDate();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.movie,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC601\\uD654 \\uAC80\\uC0C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.search_box,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: searchText,\n        type: \"text\",\n        placeholder: \"\\uC601\\uD654 \\uC81C\\uBAA9\\uC744 \\uAC80\\uC0C9\\uD558\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          getDate(); // state만 변경해주는 방법도 좋음\n        },\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.list,\n      children: list.map(v => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w185/${v.poster_path}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: v.original_title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uD3C9\\uC810: \", v.vote_average, \" / 10\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uAC1C\\uBD09\\uC77C: \", v.release_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: v.overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)]\n        }, `${v.original_title}${v.id}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieList, \"QswpV0wIzObbshoBgJeggKVRzQw=\");\n_c = MovieList;\nexport default MovieList;\n{/* <li>\n <img src={`https://image.tmdb.org/t/p/w185/qYczuua2tgjfxcdtLNDC0n4mOHz.jpg`}\n />\n <h2>서울의 봄</h2>\n <p>평점: 7.428</p>\n <p>개봉일: 2023-11-22</p>\n <p>After the assassination of President Park, martial law has been declared.</p>\n </li> */}\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["useState","styles","useEffect","jsxDEV","_jsxDEV","MovieList","_s","list","setList","sch","setSch","searchText","e","search","target","value","getDate","url","res","fetch","data","json","results","className","movie","children","fileName","_jsxFileName","lineNumber","columnNumber","search_box","onChange","type","placeholder","onClick","map","v","src","poster_path","original_title","vote_average","release_date","overview","id","_c","$RefreshReg$"],"sources":["C:/react/react-movie/src/components/MovieList.js"],"sourcesContent":["import { useState } from 'react';\nimport styles from './MovieList.module.css';\nimport { useEffect } from 'react';\n\nconst MovieList = () => {\n  const [list,setList] = useState([]);\n  const [sch,setSch] = useState(\"\");\n\n  const searchText = (e) => {\n    const search = e.target.value;\n    setSch(search);\n  }\n\n  const getDate = async() => {\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=cba95d401a14ab806ffc13a5052aab89&query=${sch}`;\n    const res = await fetch(url);\n    const data = await res.json();\n    setList(data.results);\n  }\n\n  useEffect (() => {\n    getDate();\n  }, []);\n  \n  return (\n    <div className={styles.movie}>\n      <h1>영화 검색</h1>\n      <div className={styles.search_box}>\n        <input\n          onChange={searchText}\n          type=\"text\"\n          placeholder=\"영화 제목을 검색하세요\"\n        />\n        <button onClick={() => {\n          getDate(); // state만 변경해주는 방법도 좋음\n        }}>\n          검색\n        </button>\n      </div>\n      <ul className={styles.list}>\n        {\n          list.map((v) => {\n            return (\n              <li key={`${v.original_title}${v.id}`}>\n                <img src={`https://image.tmdb.org/t/p/w185/${v.poster_path}`} />\n                <h2>{v.original_title}</h2>\n                <p>평점: {v.vote_average} / 10</p>\n                <p>개봉일: {v.release_date}</p>\n                <p>{v.overview}</p>\n              </li>\n            )\n          })\n        }\n      </ul>\n    </div>\n  );\n};\n\nexport default MovieList;\n    \n{/* <li>\n<img src={`https://image.tmdb.org/t/p/w185/qYczuua2tgjfxcdtLNDC0n4mOHz.jpg`}\n/>\n<h2>서울의 봄</h2>\n<p>평점: 7.428</p>\n<p>개봉일: 2023-11-22</p>\n<p>After the assassination of President Park, martial law has been declared.</p>\n</li> */}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}